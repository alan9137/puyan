# Generated by Django 4.1.2 on 2022-10-26 10:45

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import shortuuid.django_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('account', models.CharField(default=None, max_length=100, null=True)),
                ('phone', models.CharField(default=None, max_length=12, null=True)),
                ('email', models.CharField(default=None, max_length=100, null=True)),
                ('confirm_string', models.CharField(default=None, max_length=256, null=True)),
                ('code', shortuuid.django_fields.ShortUUIDField(alphabet=None, editable=False, length=11, max_length=11, prefix='')),
                ('must_change_password', models.BooleanField(default=False)),
                ('badge', models.IntegerField(default=0)),
                ('fb_id', models.IntegerField(default=0)),
                ('privacy_policy', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['id', 'account', 'email', 'phone'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Weight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.FloatField(max_length=256, null=True)),
                ('body_fat', models.FloatField(max_length=256, null=True)),
                ('bmi', models.FloatField(max_length=256, null=True)),
                ('recorded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weight', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['id', 'user', 'recorded_at'],
            },
        ),
        migrations.CreateModel(
            name='UserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('after_recording', models.BooleanField(default=False)),
                ('no_recording_for_a_day', models.BooleanField(default=False)),
                ('over_max_or_under_min', models.BooleanField(default=False)),
                ('after_meal', models.BooleanField(default=False)),
                ('unit_of_sugar', models.BooleanField(default=False)),
                ('unit_of_weight', models.BooleanField(default=False)),
                ('unit_of_height', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='setting', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['id', 'user'],
            },
        ),
        migrations.CreateModel(
            name='UserSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=256, null=True)),
                ('birthday', models.CharField(default=None, max_length=256, null=True)),
                ('height', models.FloatField(default=None, max_length=256, null=True)),
                ('gender', models.BooleanField(default=False)),
                ('fcm_id', models.CharField(default=None, max_length=256, null=True)),
                ('address', models.CharField(default=None, max_length=256, null=True)),
                ('weight', models.CharField(default=None, max_length=256, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='set_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Sugar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sugar', models.IntegerField(null=True)),
                ('time_period', models.IntegerField(null=True)),
                ('recorded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sugar', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['id', 'user', 'recorded_at'],
            },
        ),
        migrations.CreateModel(
            name='Pressure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('systolic', models.FloatField(max_length=256, null=True)),
                ('diastolic', models.FloatField(max_length=256, null=True)),
                ('pulse', models.IntegerField(null=True)),
                ('recorded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pressure', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['id', 'user', 'recorded_at'],
            },
        ),
        migrations.CreateModel(
            name='Medical',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diabetes_typ', models.IntegerField(default=None, null=True)),
                ('oad', models.BooleanField(default=False)),
                ('insulin', models.BooleanField(default=False)),
                ('anti_hypertensives', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['id', 'user'],
            },
        ),
        migrations.CreateModel(
            name='Friend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(default=None)),
                ('accept', models.IntegerField(default=0)),
                ('read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invitees', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='code_2', to=settings.AUTH_USER_MODEL)),
                ('inviter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='code_1', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['type', 'inviter', 'invitees'],
            },
        ),
        migrations.CreateModel(
            name='Drug',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.BooleanField(default=False)),
                ('name', models.CharField(default=None, max_length=256, null=True)),
                ('recorded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drug', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['id', 'user', 'recorded_at'],
            },
        ),
        migrations.CreateModel(
            name='Diet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('meal', models.IntegerField(default=None, null=True)),
                ('tag', models.JSONField(blank=True, null=True)),
                ('image', models.IntegerField(default=0)),
                ('lat', models.FloatField(max_length=256, null=True)),
                ('lng', models.FloatField(max_length=256, null=True)),
                ('recorded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diet', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['id', 'user', 'recorded_at'],
            },
        ),
        migrations.CreateModel(
            name='Default',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sugar_delta_max', models.IntegerField(default=None, null=True)),
                ('sugar_delta_min', models.IntegerField(default=None, null=True)),
                ('sugar_morning_max', models.IntegerField(default=None, null=True)),
                ('sugar_morning_min', models.IntegerField(default=None, null=True)),
                ('sugar_evening_max', models.IntegerField(default=None, null=True)),
                ('sugar_evening_min', models.IntegerField(default=None, null=True)),
                ('sugar_before_max', models.IntegerField(default=None, null=True)),
                ('sugar_before_min', models.IntegerField(default=None, null=True)),
                ('sugar_after_max', models.IntegerField(default=None, null=True)),
                ('sugar_after_min', models.IntegerField(default=None, null=True)),
                ('systolic_max', models.IntegerField(default=None, null=True)),
                ('systolic_min', models.IntegerField(default=None, null=True)),
                ('diastolic_max', models.IntegerField(default=None, null=True)),
                ('diastolic_min', models.IntegerField(default=None, null=True)),
                ('pulse_max', models.IntegerField(default=None, null=True)),
                ('pulse_min', models.IntegerField(default=None, null=True)),
                ('weight_max', models.IntegerField(default=None, null=True)),
                ('weight_min', models.IntegerField(default=None, null=True)),
                ('bmi_max', models.IntegerField(default=None, null=True)),
                ('bmi_min', models.IntegerField(default=None, null=True)),
                ('body_fat_max', models.IntegerField(default=None, null=True)),
                ('body_fat_min', models.IntegerField(default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='default', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['id', 'user'],
            },
        ),
        migrations.CreateModel(
            name='Care',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_id', models.IntegerField(default=0)),
                ('reply_id', models.IntegerField(default=0)),
                ('message', models.TextField(help_text='關懷諮詢', max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='care', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['updated_at'],
            },
        ),
        migrations.CreateModel(
            name='A1c',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('a1c', models.FloatField(max_length=256, null=True)),
                ('recorded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='a1c', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['id', 'user', 'recorded_at'],
            },
        ),
    ]
